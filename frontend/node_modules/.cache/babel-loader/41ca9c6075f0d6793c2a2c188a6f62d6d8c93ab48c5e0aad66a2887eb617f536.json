{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\Chatbot\\\\Language_Agnostic_Chatbot\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\n// Prefer build-time env REACT_APP_API_URL; if not available, use runtime window.__API_URL__;\n// As a final fallback we keep your Render URL.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || window.__API_URL__ || 'https://language-agnostic-chatbot-1.onrender.com';\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: \"Hello! I'm here to help. Ask about circulars, admissions, exams...\"\n  }]);\n  const [input, setInput] = useState('');\n  const handleSend = async () => {\n    if (input.trim() === '') return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    try {\n      var _resp$data;\n      const resp = await axios.post(`${API_URL}/ask_bot`, {\n        query: input\n      });\n      const botMessage = {\n        sender: 'bot',\n        text: (resp === null || resp === void 0 ? void 0 : (_resp$data = resp.data) === null || _resp$data === void 0 ? void 0 : _resp$data.response) || 'No response from server.'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      console.error('Error fetching bot response:', err);\n      const errorMessage = {\n        sender: 'bot',\n        text: 'Sorry, I am unable to connect to the server.'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: \"University Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((m, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `msg ${m.sender === 'user' ? 'user' : 'bot'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: m.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Ask a question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        className: \"chat-send-btn\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"1s/0JqvKhpbSAtR2fRtfqYPsKio=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","window","__API_URL__","Chatbot","_s","messages","setMessages","sender","text","input","setInput","handleSend","trim","userMessage","prev","_resp$data","resp","post","query","botMessage","data","response","err","console","error","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","m","idx","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/Chatbot/Language_Agnostic_Chatbot/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\n\r\n// Prefer build-time env REACT_APP_API_URL; if not available, use runtime window.__API_URL__;\r\n// As a final fallback we keep your Render URL.\r\nconst API_URL = process.env.REACT_APP_API_URL || window.__API_URL__ || 'https://language-agnostic-chatbot-1.onrender.com';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([\r\n    { sender: 'bot', text: \"Hello! I'm here to help. Ask about circulars, admissions, exams...\" }\r\n  ]);\r\n  const [input, setInput] = useState('');\r\n\r\n  const handleSend = async () => {\r\n    if (input.trim() === '') return;\r\n\r\n    const userMessage = { sender: 'user', text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput('');\r\n\r\n    try {\r\n      const resp = await axios.post(`${API_URL}/ask_bot`, { query: input });\r\n      const botMessage = { sender: 'bot', text: resp?.data?.response || 'No response from server.' };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      console.error('Error fetching bot response:', err);\r\n      const errorMessage = { sender: 'bot', text: 'Sorry, I am unable to connect to the server.' };\r\n      setMessages((prev) => [...prev, errorMessage]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <div className=\"chat-header\">University Assistant</div>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((m, idx) => (\r\n          <div key={idx} className={`msg ${m.sender === 'user' ? 'user' : 'bot'}`}>\r\n            <div>{m.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input\">\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} placeholder=\"Ask a question...\" />\r\n        <button onClick={handleSend} className=\"chat-send-btn\">Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}